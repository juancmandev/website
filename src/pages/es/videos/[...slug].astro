---
import Layout from '@/layouts/Layout.astro';
import components from '@/components/mdx/wrapper';
import formatDate from '@/utils/format-date';
import { getLangFromUrl } from '@/i18n/utils';
import { getCollection, getEntry, render } from 'astro:content';

export async function getStaticPaths() {
  const allVideos = await getCollection(
    'videos',
    ({ data }) => data.draft !== true
  );
  const formatVideos = allVideos.map((video) => {
    const [id] = video.id.split('/');

    return {
      ...video,
      id: id.split('.')[0],
    };
  });

  return formatVideos.map((video) => ({
    params: { slug: video.id },
  }));
}

const lang = getLangFromUrl(Astro.url);
const { slug } = Astro.params;
const video = await getEntry('videos', slug)!;
const { Content, remarkPluginFrontmatter: data } = await render(video);
---

<Layout
  title={data.title}
  description={data.description}
>
  <article class='prose prose-invert'>
    <h1>{data.title}</h1>
    <Content components={{ ...components }} />
    <hr />
    <p>
      <strong>Posted: </strong>
      {data.date && formatDate(new Date(data.date), lang)}
    </p>
  </article>
</Layout>
