---
import Layout from '@/layouts/Layout.astro';
import components from '@/components/mdx/wrapper';
import formatDate from '@/utils/format-date';
import { getLangFromUrl } from '@/i18n/utils';
import { getCollection, getEntry, render } from 'astro:content';

export async function getStaticPaths() {
  const allProjects = await getCollection(
    'portfolio',
    ({ data }) => data.draft !== true
  );
  const filterEnProjects = allProjects.map((project) => {
    const [lang, id] = project.id.split('/');

    if (lang === 'en')
      return {
        ...project,
        id: id.split('.')[0],
      };
    else null;
  });

  return filterEnProjects.map((project) => ({
    params: { slug: project?.id },
  }));
}

const lang = getLangFromUrl(Astro.url);
const { slug } = Astro.params;
const project = await getEntry('portfolio', `${lang}/${slug}`)!;
const { Content, remarkPluginFrontmatter: data } = await render(project);
---

<Layout
  title={data.title}
  description={data.description}
>
  <article class='prose prose-invert'>
    <h1>{data.title}</h1>
    <Content components={{ ...components }} />
    <hr />
    <p>
      <strong>Posted: </strong>
      {data.date && formatDate(new Date(data.date), lang)}
    </p>
  </article>
</Layout>
